-- Copyright (C) 2018  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.
--F1L2 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~1 at MLABCELL_X82_Y3_N24
F1L2_adder_eqn = ( VCC ) + ( F1L8 ) + ( F1L7 );
F1L2 = SUM(F1L2_adder_eqn);


--E1_cout is add_sub:top_inst|generic_adder_beh:gen_add|cout at LABCELL_X81_Y3_N54
E1_cout_adder_eqn = ( GND ) + ( E1L6 ) + ( E1L5 );
E1_cout = SUM(E1_cout_adder_eqn);


--F1L6 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~5 at MLABCELL_X82_Y3_N21
F1L6_adder_eqn = ( !C1_b_reg[7] $ (C1_a_reg[7]) ) + ( F1L36 ) + ( F1L35 );
F1L6 = SUM(F1L6_adder_eqn);

--F1L7 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~6 at MLABCELL_X82_Y3_N21
F1L7_adder_eqn = ( !C1_b_reg[7] $ (C1_a_reg[7]) ) + ( F1L36 ) + ( F1L35 );
F1L7 = CARRY(F1L7_adder_eqn);

--F1L8 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~7 at MLABCELL_X82_Y3_N21
F1L8_share_eqn = (!C1_b_reg[7] & C1_a_reg[7]);
F1L8 = SHARE(F1L8_share_eqn);


--E1_sum[7] is add_sub:top_inst|generic_adder_beh:gen_add|sum[7] at LABCELL_X81_Y3_N51
E1_sum[7]_adder_eqn = ( !C1_a_reg[7] $ (!C1_b_reg[7]) ) + ( E1L27 ) + ( E1L26 );
E1_sum[7] = SUM(E1_sum[7]_adder_eqn);

--E1L5 is add_sub:top_inst|generic_adder_beh:gen_add|_~4 at LABCELL_X81_Y3_N51
E1L5_adder_eqn = ( !C1_a_reg[7] $ (!C1_b_reg[7]) ) + ( E1L27 ) + ( E1L26 );
E1L5 = CARRY(E1L5_adder_eqn);

--E1L6 is add_sub:top_inst|generic_adder_beh:gen_add|_~5 at LABCELL_X81_Y3_N51
E1L6_share_eqn = (C1_a_reg[7] & C1_b_reg[7]);
E1L6 = SHARE(E1L6_share_eqn);


--F1L10 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~9 at MLABCELL_X82_Y3_N0
F1L10_adder_eqn = ( !C1L31Q $ (!C1_a_reg[0]) ) + ( !VCC ) + ( !VCC );
F1L10 = SUM(F1L10_adder_eqn);

--F1L11 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~10 at MLABCELL_X82_Y3_N0
F1L11_adder_eqn = ( !C1L31Q $ (!C1_a_reg[0]) ) + ( !VCC ) + ( !VCC );
F1L11 = CARRY(F1L11_adder_eqn);

--F1L12 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~11 at MLABCELL_X82_Y3_N0
F1L12_share_eqn = (!C1L31Q) # (C1_a_reg[0]);
F1L12 = SHARE(F1L12_share_eqn);


--E1_sum[0] is add_sub:top_inst|generic_adder_beh:gen_add|sum[0] at LABCELL_X81_Y3_N30
E1_sum[0]_adder_eqn = ( !C1_b_reg[0] $ (!C1_a_reg[0]) ) + ( !VCC ) + ( !VCC );
E1_sum[0] = SUM(E1_sum[0]_adder_eqn);

--E1L8 is add_sub:top_inst|generic_adder_beh:gen_add|_~7 at LABCELL_X81_Y3_N30
E1L8_adder_eqn = ( !C1_b_reg[0] $ (!C1_a_reg[0]) ) + ( !VCC ) + ( !VCC );
E1L8 = CARRY(E1L8_adder_eqn);

--E1L9 is add_sub:top_inst|generic_adder_beh:gen_add|_~8 at LABCELL_X81_Y3_N30
E1L9_share_eqn = (C1_b_reg[0] & C1_a_reg[0]);
E1L9 = SHARE(E1L9_share_eqn);


--F1L14 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~13 at MLABCELL_X82_Y3_N3
F1L14_adder_eqn = ( !C1L6Q $ (C1_b_reg[1]) ) + ( F1L12 ) + ( F1L11 );
F1L14 = SUM(F1L14_adder_eqn);

--F1L15 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~14 at MLABCELL_X82_Y3_N3
F1L15_adder_eqn = ( !C1L6Q $ (C1_b_reg[1]) ) + ( F1L12 ) + ( F1L11 );
F1L15 = CARRY(F1L15_adder_eqn);

--F1L16 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~15 at MLABCELL_X82_Y3_N3
F1L16_share_eqn = (C1L6Q & !C1_b_reg[1]);
F1L16 = SHARE(F1L16_share_eqn);


--E1_sum[1] is add_sub:top_inst|generic_adder_beh:gen_add|sum[1] at LABCELL_X81_Y3_N33
E1_sum[1]_adder_eqn = ( !C1L34Q $ (!C1L6Q) ) + ( E1L9 ) + ( E1L8 );
E1_sum[1] = SUM(E1_sum[1]_adder_eqn);

--E1L11 is add_sub:top_inst|generic_adder_beh:gen_add|_~10 at LABCELL_X81_Y3_N33
E1L11_adder_eqn = ( !C1L34Q $ (!C1L6Q) ) + ( E1L9 ) + ( E1L8 );
E1L11 = CARRY(E1L11_adder_eqn);

--E1L12 is add_sub:top_inst|generic_adder_beh:gen_add|_~11 at LABCELL_X81_Y3_N33
E1L12_share_eqn = (C1L34Q & C1L6Q);
E1L12 = SHARE(E1L12_share_eqn);


--F1L18 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~17 at MLABCELL_X82_Y3_N6
F1L18_adder_eqn = ( !C1L37Q $ (C1_a_reg[2]) ) + ( F1L16 ) + ( F1L15 );
F1L18 = SUM(F1L18_adder_eqn);

--F1L19 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~18 at MLABCELL_X82_Y3_N6
F1L19_adder_eqn = ( !C1L37Q $ (C1_a_reg[2]) ) + ( F1L16 ) + ( F1L15 );
F1L19 = CARRY(F1L19_adder_eqn);

--F1L20 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~19 at MLABCELL_X82_Y3_N6
F1L20_share_eqn = (!C1L37Q & C1_a_reg[2]);
F1L20 = SHARE(F1L20_share_eqn);


--E1_sum[2] is add_sub:top_inst|generic_adder_beh:gen_add|sum[2] at LABCELL_X81_Y3_N36
E1_sum[2]_adder_eqn = ( !C1_b_reg[2] $ (!C1_a_reg[2]) ) + ( E1L12 ) + ( E1L11 );
E1_sum[2] = SUM(E1_sum[2]_adder_eqn);

--E1L14 is add_sub:top_inst|generic_adder_beh:gen_add|_~13 at LABCELL_X81_Y3_N36
E1L14_adder_eqn = ( !C1_b_reg[2] $ (!C1_a_reg[2]) ) + ( E1L12 ) + ( E1L11 );
E1L14 = CARRY(E1L14_adder_eqn);

--E1L15 is add_sub:top_inst|generic_adder_beh:gen_add|_~14 at LABCELL_X81_Y3_N36
E1L15_share_eqn = (C1_b_reg[2] & C1_a_reg[2]);
E1L15 = SHARE(E1L15_share_eqn);


--F1L22 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~21 at MLABCELL_X82_Y3_N9
F1L22_adder_eqn = ( !C1_a_reg[3] $ (C1L40Q) ) + ( F1L20 ) + ( F1L19 );
F1L22 = SUM(F1L22_adder_eqn);

--F1L23 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~22 at MLABCELL_X82_Y3_N9
F1L23_adder_eqn = ( !C1_a_reg[3] $ (C1L40Q) ) + ( F1L20 ) + ( F1L19 );
F1L23 = CARRY(F1L23_adder_eqn);

--F1L24 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~23 at MLABCELL_X82_Y3_N9
F1L24_share_eqn = (C1_a_reg[3] & !C1L40Q);
F1L24 = SHARE(F1L24_share_eqn);


--E1_sum[3] is add_sub:top_inst|generic_adder_beh:gen_add|sum[3] at LABCELL_X81_Y3_N39
E1_sum[3]_adder_eqn = ( !C1_b_reg[3] $ (!C1_a_reg[3]) ) + ( E1L15 ) + ( E1L14 );
E1_sum[3] = SUM(E1_sum[3]_adder_eqn);

--E1L17 is add_sub:top_inst|generic_adder_beh:gen_add|_~16 at LABCELL_X81_Y3_N39
E1L17_adder_eqn = ( !C1_b_reg[3] $ (!C1_a_reg[3]) ) + ( E1L15 ) + ( E1L14 );
E1L17 = CARRY(E1L17_adder_eqn);

--E1L18 is add_sub:top_inst|generic_adder_beh:gen_add|_~17 at LABCELL_X81_Y3_N39
E1L18_share_eqn = (C1_b_reg[3] & C1_a_reg[3]);
E1L18 = SHARE(E1L18_share_eqn);


--F1L26 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~25 at MLABCELL_X82_Y3_N12
F1L26_adder_eqn = ( !C1_b_reg[4] $ (C1_a_reg[4]) ) + ( F1L24 ) + ( F1L23 );
F1L26 = SUM(F1L26_adder_eqn);

--F1L27 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~26 at MLABCELL_X82_Y3_N12
F1L27_adder_eqn = ( !C1_b_reg[4] $ (C1_a_reg[4]) ) + ( F1L24 ) + ( F1L23 );
F1L27 = CARRY(F1L27_adder_eqn);

--F1L28 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~27 at MLABCELL_X82_Y3_N12
F1L28_share_eqn = (!C1_b_reg[4] & C1_a_reg[4]);
F1L28 = SHARE(F1L28_share_eqn);


--E1_sum[4] is add_sub:top_inst|generic_adder_beh:gen_add|sum[4] at LABCELL_X81_Y3_N42
E1_sum[4]_adder_eqn = ( !C1_a_reg[4] $ (!C1L43Q) ) + ( E1L18 ) + ( E1L17 );
E1_sum[4] = SUM(E1_sum[4]_adder_eqn);

--E1L20 is add_sub:top_inst|generic_adder_beh:gen_add|_~19 at LABCELL_X81_Y3_N42
E1L20_adder_eqn = ( !C1_a_reg[4] $ (!C1L43Q) ) + ( E1L18 ) + ( E1L17 );
E1L20 = CARRY(E1L20_adder_eqn);

--E1L21 is add_sub:top_inst|generic_adder_beh:gen_add|_~20 at LABCELL_X81_Y3_N42
E1L21_share_eqn = (C1_a_reg[4] & C1L43Q);
E1L21 = SHARE(E1L21_share_eqn);


--F1L30 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~29 at MLABCELL_X82_Y3_N15
F1L30_adder_eqn = ( !C1L14Q $ (C1L45Q) ) + ( F1L28 ) + ( F1L27 );
F1L30 = SUM(F1L30_adder_eqn);

--F1L31 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~30 at MLABCELL_X82_Y3_N15
F1L31_adder_eqn = ( !C1L14Q $ (C1L45Q) ) + ( F1L28 ) + ( F1L27 );
F1L31 = CARRY(F1L31_adder_eqn);

--F1L32 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~31 at MLABCELL_X82_Y3_N15
F1L32_share_eqn = (C1L14Q & !C1L45Q);
F1L32 = SHARE(F1L32_share_eqn);


--E1_sum[5] is add_sub:top_inst|generic_adder_beh:gen_add|sum[5] at LABCELL_X81_Y3_N45
E1_sum[5]_adder_eqn = ( !C1_b_reg[5] $ (!C1L14Q) ) + ( E1L21 ) + ( E1L20 );
E1_sum[5] = SUM(E1_sum[5]_adder_eqn);

--E1L23 is add_sub:top_inst|generic_adder_beh:gen_add|_~22 at LABCELL_X81_Y3_N45
E1L23_adder_eqn = ( !C1_b_reg[5] $ (!C1L14Q) ) + ( E1L21 ) + ( E1L20 );
E1L23 = CARRY(E1L23_adder_eqn);

--E1L24 is add_sub:top_inst|generic_adder_beh:gen_add|_~23 at LABCELL_X81_Y3_N45
E1L24_share_eqn = (C1_b_reg[5] & C1L14Q);
E1L24 = SHARE(E1L24_share_eqn);


--F1L34 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~33 at MLABCELL_X82_Y3_N18
F1L34_adder_eqn = ( !C1L47Q $ (C1L17Q) ) + ( F1L32 ) + ( F1L31 );
F1L34 = SUM(F1L34_adder_eqn);

--F1L35 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~34 at MLABCELL_X82_Y3_N18
F1L35_adder_eqn = ( !C1L47Q $ (C1L17Q) ) + ( F1L32 ) + ( F1L31 );
F1L35 = CARRY(F1L35_adder_eqn);

--F1L36 is add_sub:top_inst|generic_subtractor_beh:gen_sub|Add0~35 at MLABCELL_X82_Y3_N18
F1L36_share_eqn = (!C1L47Q & C1L17Q);
F1L36 = SHARE(F1L36_share_eqn);


--E1_sum[6] is add_sub:top_inst|generic_adder_beh:gen_add|sum[6] at LABCELL_X81_Y3_N48
E1_sum[6]_adder_eqn = ( !C1_b_reg[6] $ (!C1L17Q) ) + ( E1L24 ) + ( E1L23 );
E1_sum[6] = SUM(E1_sum[6]_adder_eqn);

--E1L26 is add_sub:top_inst|generic_adder_beh:gen_add|_~25 at LABCELL_X81_Y3_N48
E1L26_adder_eqn = ( !C1_b_reg[6] $ (!C1L17Q) ) + ( E1L24 ) + ( E1L23 );
E1L26 = CARRY(E1L26_adder_eqn);

--E1L27 is add_sub:top_inst|generic_adder_beh:gen_add|_~26 at LABCELL_X81_Y3_N48
E1L27_share_eqn = (C1_b_reg[6] & C1L17Q);
E1L27 = SHARE(E1L27_share_eqn);


--C1_out_12b[0] is add_sub:top_inst|out_12b[0] at FF_X84_Y7_N40
--register power-up is low

C1_out_12b[0] = DFFEAS( , GLOBAL(A1L4),  ,  ,  , C1_output[0],  ,  , VCC);


--C1_out_12b[1] is add_sub:top_inst|out_12b[1] at FF_X84_Y7_N47
--register power-up is low

C1_out_12b[1] = DFFEAS( , GLOBAL(A1L4),  ,  ,  , C1_output[1],  ,  , VCC);


--C1_out_12b[2] is add_sub:top_inst|out_12b[2] at FF_X84_Y7_N5
--register power-up is low

C1_out_12b[2] = DFFEAS( , GLOBAL(A1L4),  ,  ,  , C1_output[2],  ,  , VCC);


--C1_out_12b[3] is add_sub:top_inst|out_12b[3] at FF_X83_Y7_N40
--register power-up is low

C1_out_12b[3] = DFFEAS( , GLOBAL(A1L4),  ,  ,  , C1_output[3],  ,  , VCC);


--C1_out_12b[4] is add_sub:top_inst|out_12b[4] at FF_X83_Y3_N40
--register power-up is low

C1_out_12b[4] = DFFEAS( , GLOBAL(A1L4),  ,  ,  , C1_output[4],  ,  , VCC);


--C1_out_12b[5] is add_sub:top_inst|out_12b[5] at FF_X83_Y7_N44
--register power-up is low

C1_out_12b[5] = DFFEAS(C1L69, GLOBAL(A1L4),  ,  ,  ,  ,  ,  ,  );


--C1_out_12b[6] is add_sub:top_inst|out_12b[6] at FF_X83_Y7_N50
--register power-up is low

C1_out_12b[6] = DFFEAS( , GLOBAL(A1L4),  ,  ,  , C1_output[6],  ,  , VCC);


--C1_out_12b[8] is add_sub:top_inst|out_12b[8] at FF_X82_Y3_N31
--register power-up is low

C1_out_12b[8] = DFFEAS(C1L95, GLOBAL(A1L4),  ,  ,  ,  ,  ,  ,  );


--C1_out_12b[7] is add_sub:top_inst|out_12b[7] at FF_X83_Y7_N8
--register power-up is low

C1_out_12b[7] = DFFEAS(C1L72, GLOBAL(A1L4),  ,  ,  ,  ,  ,  ,  );


--H1L1 is add_sub:top_inst|double_dabble:hexOuts|bcd~0 at LABCELL_X83_Y7_N3
H1L1 = ( C1_out_12b[4] & ( C1_out_12b[6] & ( !C1_out_12b[8] $ (((!C1_out_12b[7]) # (C1_out_12b[5]))) ) ) ) # ( !C1_out_12b[4] & ( C1_out_12b[6] & ( (!C1_out_12b[8] & (C1_out_12b[5] & !C1_out_12b[7])) # (C1_out_12b[8] & (!C1_out_12b[5] & C1_out_12b[7])) ) ) ) # ( C1_out_12b[4] & ( !C1_out_12b[6] & ( (!C1_out_12b[8] & ((!C1_out_12b[7]) # (C1_out_12b[5]))) ) ) ) # ( !C1_out_12b[4] & ( !C1_out_12b[6] & ( !C1_out_12b[8] $ (((!C1_out_12b[7]) # (C1_out_12b[5]))) ) ) );


--H1L2 is add_sub:top_inst|double_dabble:hexOuts|bcd~1 at LABCELL_X83_Y7_N18
H1L2 = ( C1_out_12b[7] & ( (!C1_out_12b[6] & ((!C1_out_12b[5] & (!C1_out_12b[8] & !C1_out_12b[4])) # (C1_out_12b[5] & (C1_out_12b[8] & C1_out_12b[4])))) # (C1_out_12b[6] & (!C1_out_12b[5] & ((!C1_out_12b[8]) # (!C1_out_12b[4])))) ) ) # ( !C1_out_12b[7] & ( (!C1_out_12b[6] & (!C1_out_12b[5] $ (((!C1_out_12b[8]) # (!C1_out_12b[4]))))) # (C1_out_12b[6] & (C1_out_12b[5] & ((C1_out_12b[4]) # (C1_out_12b[8])))) ) );


--H1L9 is add_sub:top_inst|double_dabble:hexOuts|LessThan9~0 at LABCELL_X83_Y7_N36
H1L9 = ( C1_out_12b[3] & ( C1_out_12b[7] & ( (!C1_out_12b[6] & (!C1_out_12b[5] $ (((C1_out_12b[8] & C1_out_12b[4]))))) # (C1_out_12b[6] & ((!C1_out_12b[5]) # ((!C1_out_12b[8] & !C1_out_12b[4])))) ) ) ) # ( !C1_out_12b[3] & ( C1_out_12b[7] & ( (!C1_out_12b[6] & (!C1_out_12b[5] & ((!C1_out_12b[8]) # (!C1_out_12b[4])))) # (C1_out_12b[6] & (!C1_out_12b[5] $ (((!C1_out_12b[8] & !C1_out_12b[4]))))) ) ) ) # ( C1_out_12b[3] & ( !C1_out_12b[7] & ( (!C1_out_12b[6] & (((C1_out_12b[8] & C1_out_12b[4])) # (C1_out_12b[5]))) # (C1_out_12b[6] & (!C1_out_12b[5] $ (((C1_out_12b[4]) # (C1_out_12b[8]))))) ) ) ) # ( !C1_out_12b[3] & ( !C1_out_12b[7] & ( (!C1_out_12b[6] & (C1_out_12b[5] & ((C1_out_12b[4]) # (C1_out_12b[8])))) # (C1_out_12b[6] & ((!C1_out_12b[5] & (!C1_out_12b[8] & !C1_out_12b[4])) # (C1_out_12b[5] & (C1_out_12b[8] & C1_out_12b[4])))) ) ) );


--H1L11 is add_sub:top_inst|double_dabble:hexOuts|ones[1]~0 at MLABCELL_X84_Y7_N0
H1L11 = ( C1_out_12b[1] & ( H1L9 & ( (!H1L1 & ((!C1_out_12b[3] & (!C1_out_12b[2])) # (C1_out_12b[3] & ((H1L2))))) # (H1L1 & (C1_out_12b[2] & (C1_out_12b[3]))) ) ) ) # ( !C1_out_12b[1] & ( H1L9 & ( (!H1L1 & (((C1_out_12b[3] & !H1L2)))) # (H1L1 & ((!C1_out_12b[2] & ((!H1L2) # (C1_out_12b[3]))) # (C1_out_12b[2] & (!C1_out_12b[3])))) ) ) ) # ( C1_out_12b[1] & ( !H1L9 & ( (!H1L1 & (((!C1_out_12b[3] & !H1L2)))) # (H1L1 & (!C1_out_12b[2] $ ((!C1_out_12b[3])))) ) ) ) # ( !C1_out_12b[1] & ( !H1L9 & ( (!H1L1 & (((C1_out_12b[2] & C1_out_12b[3])) # (H1L2))) # (H1L1 & (!C1_out_12b[2] & (!C1_out_12b[3]))) ) ) );


--H1L12 is add_sub:top_inst|double_dabble:hexOuts|ones[2]~1 at MLABCELL_X84_Y7_N30
H1L12 = ( C1_out_12b[1] & ( C1_out_12b[3] & ( (!H1L1 & (!C1_out_12b[2] $ (!H1L9 $ (H1L2)))) # (H1L1 & (!C1_out_12b[2] & ((!H1L9) # (!H1L2)))) ) ) ) # ( !C1_out_12b[1] & ( C1_out_12b[3] & ( (!C1_out_12b[2] & (H1L1 & ((!H1L9) # (H1L2)))) # (C1_out_12b[2] & (!H1L1 & ((H1L2) # (H1L9)))) ) ) ) # ( C1_out_12b[1] & ( !C1_out_12b[3] & ( (!H1L9 & ((!C1_out_12b[2] & ((H1L2))) # (C1_out_12b[2] & (!H1L1 & !H1L2)))) # (H1L9 & (!C1_out_12b[2] $ (((H1L1 & H1L2))))) ) ) ) # ( !C1_out_12b[1] & ( !C1_out_12b[3] & ( (!H1L1 & (!C1_out_12b[2] $ ((!H1L9)))) # (H1L1 & (!H1L2 & (!C1_out_12b[2] $ (H1L9)))) ) ) );


--H1L13 is add_sub:top_inst|double_dabble:hexOuts|ones[3]~2 at MLABCELL_X84_Y7_N24
H1L13 = ( C1_out_12b[1] & ( C1_out_12b[3] & ( (!C1_out_12b[2] & (H1L2 & (!H1L1 $ (H1L9)))) # (C1_out_12b[2] & (!H1L1 & (H1L9 & !H1L2))) ) ) ) # ( !C1_out_12b[1] & ( C1_out_12b[3] & ( (!H1L9 & ((!C1_out_12b[2] & (!H1L1)) # (C1_out_12b[2] & ((H1L2) # (H1L1))))) ) ) ) # ( C1_out_12b[1] & ( !C1_out_12b[3] & ( (!C1_out_12b[2] & (H1L1 & ((!H1L2)))) # (C1_out_12b[2] & (!H1L1 & (!H1L9 & H1L2))) ) ) ) # ( !C1_out_12b[1] & ( !C1_out_12b[3] & ( (H1L9 & ((!C1_out_12b[2] & (H1L1)) # (C1_out_12b[2] & ((!H1L1) # (!H1L2))))) ) ) );


--G3L7 is add_sub:top_inst|bcd2seven_seg:hexOne|Mux6~0 at MLABCELL_X84_Y7_N57
G3L7 = (!H1L13 & (!H1L11 & (!H1L12 $ (!C1_out_12b[0])))) # (H1L13 & (C1_out_12b[0] & (!H1L12 $ (!H1L11))));


--G3L6 is add_sub:top_inst|bcd2seven_seg:hexOne|Mux5~0 at MLABCELL_X84_Y7_N51
G3L6 = ( H1L13 & ( (!C1_out_12b[0] & ((H1L12))) # (C1_out_12b[0] & (H1L11)) ) ) # ( !H1L13 & ( (H1L12 & (!H1L11 $ (!C1_out_12b[0]))) ) );


--G3L5 is add_sub:top_inst|bcd2seven_seg:hexOne|Mux4~0 at MLABCELL_X84_Y7_N6
G3L5 = (!H1L12 & (H1L11 & (!H1L13 & !C1_out_12b[0]))) # (H1L12 & (H1L13 & ((!C1_out_12b[0]) # (H1L11))));


--G3L4 is add_sub:top_inst|bcd2seven_seg:hexOne|Mux3~0 at MLABCELL_X84_Y7_N48
G3L4 = (!H1L11 & (!H1L13 & (!H1L12 $ (!C1_out_12b[0])))) # (H1L11 & ((!H1L12 & (H1L13 & !C1_out_12b[0])) # (H1L12 & ((C1_out_12b[0])))));


--G3L3 is add_sub:top_inst|bcd2seven_seg:hexOne|Mux2~0 at MLABCELL_X84_Y7_N9
G3L3 = ( H1L13 & ( (!H1L11 & (!H1L12 & C1_out_12b[0])) ) ) # ( !H1L13 & ( ((!H1L11 & H1L12)) # (C1_out_12b[0]) ) );


--G3L2 is add_sub:top_inst|bcd2seven_seg:hexOne|Mux1~0 at MLABCELL_X84_Y7_N12
G3L2 = ( H1L13 & ( (H1L12 & (!H1L11 & C1_out_12b[0])) ) ) # ( !H1L13 & ( (!H1L12 & ((C1_out_12b[0]) # (H1L11))) # (H1L12 & (H1L11 & C1_out_12b[0])) ) );


--G3L1 is add_sub:top_inst|bcd2seven_seg:hexOne|Mux0~0 at MLABCELL_X84_Y7_N54
G3L1 = (!C1_out_12b[0] & ((!H1L13 $ (!H1L12)) # (H1L11))) # (C1_out_12b[0] & ((!H1L12 $ (!H1L11)) # (H1L13)));


--H1L14 is add_sub:top_inst|double_dabble:hexOuts|tens[0]~0 at MLABCELL_X84_Y7_N36
H1L14 = ( C1_out_12b[1] & ( H1L9 & ( (!C1_out_12b[2] & (!H1L1 $ (((!C1_out_12b[3]) # (H1L2))))) # (C1_out_12b[2] & ((!H1L2 & (!H1L1)) # (H1L2 & ((!C1_out_12b[3]))))) ) ) ) # ( !C1_out_12b[1] & ( H1L9 & ( (!H1L1 & (((C1_out_12b[3] & !H1L2)))) # (H1L1 & (!C1_out_12b[3] $ (((!C1_out_12b[2] & H1L2))))) ) ) ) # ( C1_out_12b[1] & ( !H1L9 & ( (!C1_out_12b[2] & (!H1L1 $ (((!C1_out_12b[3] & !H1L2))))) # (C1_out_12b[2] & (!C1_out_12b[3] $ (((!H1L2) # (H1L1))))) ) ) ) # ( !C1_out_12b[1] & ( !H1L9 & ( (!H1L1 & (((C1_out_12b[2] & C1_out_12b[3])) # (H1L2))) # (H1L1 & (!C1_out_12b[2] & (!C1_out_12b[3] & !H1L2))) ) ) );


--H1L3 is add_sub:top_inst|double_dabble:hexOuts|bcd~2 at MLABCELL_X84_Y7_N18
H1L3 = ( C1_out_12b[2] & ( H1L2 & ( (!H1L1 & ((H1L9))) # (H1L1 & ((!C1_out_12b[3]) # (!H1L9))) ) ) ) # ( !C1_out_12b[2] & ( H1L2 & ( ((C1_out_12b[3] & H1L1)) # (H1L9) ) ) ) # ( C1_out_12b[2] & ( !H1L2 & ( (!H1L1 & ((!H1L9))) # (H1L1 & (C1_out_12b[3] & H1L9)) ) ) ) # ( !C1_out_12b[2] & ( !H1L2 & ( (!H1L9 & ((!C1_out_12b[3]) # (!H1L1))) ) ) );


--H1L4 is add_sub:top_inst|double_dabble:hexOuts|bcd~3 at LABCELL_X83_Y7_N12
H1L4 = ( C1_out_12b[3] & ( C1_out_12b[7] & ( (!C1_out_12b[5] & (!C1_out_12b[6] $ ((C1_out_12b[8])))) # (C1_out_12b[5] & (C1_out_12b[4] & (!C1_out_12b[6] $ (!C1_out_12b[8])))) ) ) ) # ( !C1_out_12b[3] & ( C1_out_12b[7] & ( (!C1_out_12b[5] & (!C1_out_12b[6] $ ((C1_out_12b[8])))) # (C1_out_12b[5] & (C1_out_12b[6] & (!C1_out_12b[8] & C1_out_12b[4]))) ) ) ) # ( C1_out_12b[3] & ( !C1_out_12b[7] & ( (!C1_out_12b[8] & (!C1_out_12b[5] $ (((!C1_out_12b[6]) # (C1_out_12b[4]))))) # (C1_out_12b[8] & (!C1_out_12b[5] & ((!C1_out_12b[4]) # (C1_out_12b[6])))) ) ) ) # ( !C1_out_12b[3] & ( !C1_out_12b[7] & ( (!C1_out_12b[5] & (((C1_out_12b[6] & !C1_out_12b[4])) # (C1_out_12b[8]))) # (C1_out_12b[5] & ((!C1_out_12b[6] & (!C1_out_12b[8] & C1_out_12b[4])) # (C1_out_12b[6] & (C1_out_12b[8] & !C1_out_12b[4])))) ) ) );


--H1L10 is add_sub:top_inst|double_dabble:hexOuts|LessThan16~0 at MLABCELL_X84_Y7_N42
H1L10 = ( C1_out_12b[2] & ( H1L9 & ( (!H1L4 & (!H1L2 $ (((!H1L1) # (!C1_out_12b[3]))))) ) ) ) # ( !C1_out_12b[2] & ( H1L9 & ( (!H1L4 & H1L2) ) ) ) # ( C1_out_12b[2] & ( !H1L9 & ( (!H1L4 & (!H1L1 $ (H1L2))) ) ) ) # ( !C1_out_12b[2] & ( !H1L9 & ( (!H1L4 & (!H1L2 $ (((H1L1 & C1_out_12b[3]))))) ) ) );


--H1L5 is add_sub:top_inst|double_dabble:hexOuts|bcd~4 at LABCELL_X83_Y7_N57
H1L5 = ( C1_out_12b[3] & ( C1_out_12b[4] & ( (!C1_out_12b[6] & ((!C1_out_12b[7] & ((C1_out_12b[8]))) # (C1_out_12b[7] & (!C1_out_12b[5] & !C1_out_12b[8])))) # (C1_out_12b[6] & (!C1_out_12b[7] $ (((C1_out_12b[5] & C1_out_12b[8]))))) ) ) ) # ( !C1_out_12b[3] & ( C1_out_12b[4] & ( (!C1_out_12b[6] & ((!C1_out_12b[5] & (C1_out_12b[7] & !C1_out_12b[8])) # (C1_out_12b[5] & (!C1_out_12b[7] & C1_out_12b[8])))) # (C1_out_12b[6] & (!C1_out_12b[7] $ (((C1_out_12b[5] & C1_out_12b[8]))))) ) ) ) # ( C1_out_12b[3] & ( !C1_out_12b[4] & ( (!C1_out_12b[6] & ((!C1_out_12b[5] & (C1_out_12b[7] & !C1_out_12b[8])) # (C1_out_12b[5] & (!C1_out_12b[7] & C1_out_12b[8])))) # (C1_out_12b[6] & ((!C1_out_12b[5] & (!C1_out_12b[7] & C1_out_12b[8])) # (C1_out_12b[5] & (!C1_out_12b[7] $ (C1_out_12b[8]))))) ) ) ) # ( !C1_out_12b[3] & ( !C1_out_12b[4] & ( (!C1_out_12b[6] & ((!C1_out_12b[5] & (C1_out_12b[7] & !C1_out_12b[8])) # (C1_out_12b[5] & (!C1_out_12b[7] & C1_out_12b[8])))) # (C1_out_12b[6] & ((!C1_out_12b[5] & (!C1_out_12b[7] & C1_out_12b[8])) # (C1_out_12b[5] & ((!C1_out_12b[7]) # (C1_out_12b[8]))))) ) ) );


--H1L6 is add_sub:top_inst|double_dabble:hexOuts|bcd~5 at LABCELL_X83_Y7_N27
H1L6 = ( C1_out_12b[3] & ( C1_out_12b[4] & ( (C1_out_12b[5] & ((!C1_out_12b[6] & (C1_out_12b[7] & !C1_out_12b[8])) # (C1_out_12b[6] & (!C1_out_12b[7] & C1_out_12b[8])))) ) ) ) # ( !C1_out_12b[3] & ( C1_out_12b[4] & ( (C1_out_12b[5] & ((!C1_out_12b[6] & (C1_out_12b[7] & !C1_out_12b[8])) # (C1_out_12b[6] & (!C1_out_12b[7] & C1_out_12b[8])))) ) ) ) # ( C1_out_12b[3] & ( !C1_out_12b[4] & ( (!C1_out_12b[6] & (C1_out_12b[7] & (!C1_out_12b[5] $ (!C1_out_12b[8])))) # (C1_out_12b[6] & (C1_out_12b[5] & (!C1_out_12b[7] & C1_out_12b[8]))) ) ) ) # ( !C1_out_12b[3] & ( !C1_out_12b[4] & ( (C1_out_12b[7] & ((!C1_out_12b[6] & (!C1_out_12b[5] $ (!C1_out_12b[8]))) # (C1_out_12b[6] & (!C1_out_12b[5] & !C1_out_12b[8])))) ) ) );


--H1L15 is add_sub:top_inst|double_dabble:hexOuts|tens[1]~1 at LABCELL_X85_Y7_N15
H1L15 = ( !H1L6 & ( H1L3 & ( (!H1L5) # (H1L10) ) ) ) # ( H1L6 & ( !H1L3 ) ) # ( !H1L6 & ( !H1L3 & ( (!H1L10 & H1L5) ) ) );


--H1L16 is add_sub:top_inst|double_dabble:hexOuts|tens[2]~2 at MLABCELL_X84_Y7_N15
H1L16 = ( H1L3 & ( (!H1L6 & (!H1L5 & H1L4)) # (H1L6 & ((!H1L4))) ) ) # ( !H1L3 & ( H1L4 ) );


--H1L17 is add_sub:top_inst|double_dabble:hexOuts|tens[3]~3 at LABCELL_X85_Y7_N18
H1L17 = ( H1L5 & ( H1L10 ) ) # ( !H1L5 & ( (H1L6 & !H1L10) ) );


--G2L7 is add_sub:top_inst|bcd2seven_seg:hexTen|Mux6~0 at LABCELL_X85_Y7_N0
G2L7 = ( H1L15 & ( (!H1L17 & (!H1L16 $ (!H1L14))) # (H1L17 & (H1L16 & H1L14)) ) ) # ( !H1L15 & ( (H1L17 & (!H1L16 & H1L14)) ) );


--G2L6 is add_sub:top_inst|bcd2seven_seg:hexTen|Mux5~0 at LABCELL_X85_Y7_N21
G2L6 = ( H1L14 & ( (!H1L17 & (H1L16 & H1L15)) # (H1L17 & ((!H1L15))) ) ) # ( !H1L14 & ( (H1L16 & ((!H1L15) # (H1L17))) ) );


--G2L5 is add_sub:top_inst|bcd2seven_seg:hexTen|Mux4~0 at LABCELL_X85_Y7_N6
G2L5 = ( H1L16 & ( (H1L17 & ((!H1L14) # (!H1L15))) ) ) # ( !H1L16 & ( (!H1L14 & (!H1L15 & !H1L17)) ) );


--G2L4 is add_sub:top_inst|bcd2seven_seg:hexTen|Mux3~0 at LABCELL_X85_Y7_N9
G2L4 = ( H1L17 & ( (!H1L15 & (!H1L14 $ (H1L16))) ) ) # ( !H1L17 & ( (!H1L14 & (H1L15 & H1L16)) # (H1L14 & (!H1L15 $ (!H1L16))) ) );


--G2L3 is add_sub:top_inst|bcd2seven_seg:hexTen|Mux2~0 at LABCELL_X85_Y7_N36
G2L3 = ( H1L16 & ( (!H1L17 & ((H1L15) # (H1L14))) ) ) # ( !H1L16 & ( (H1L14 & ((!H1L17) # (H1L15))) ) );


--G2L2 is add_sub:top_inst|bcd2seven_seg:hexTen|Mux1~0 at LABCELL_X85_Y7_N39
G2L2 = ( H1L17 & ( (H1L14 & (H1L15 & H1L16)) ) ) # ( !H1L17 & ( (!H1L14 & (!H1L15 & !H1L16)) # (H1L14 & ((!H1L15) # (!H1L16))) ) );


--G2L1 is add_sub:top_inst|bcd2seven_seg:hexTen|Mux0~0 at LABCELL_X85_Y7_N54
G2L1 = ( H1L15 & ( (!H1L17 & (H1L16)) # (H1L17 & ((!H1L16) # (H1L14))) ) ) # ( !H1L15 & ( ((!H1L16) # (!H1L14)) # (H1L17) ) );


--H1L7 is add_sub:top_inst|double_dabble:hexOuts|bcd~6 at LABCELL_X83_Y7_N33
H1L7 = ( C1_out_12b[3] & ( C1_out_12b[4] & ( (!C1_out_12b[7] & ((C1_out_12b[8]))) # (C1_out_12b[7] & (C1_out_12b[6] & !C1_out_12b[8])) ) ) ) # ( !C1_out_12b[3] & ( C1_out_12b[4] & ( (!C1_out_12b[7] & ((C1_out_12b[8]))) # (C1_out_12b[7] & (C1_out_12b[6] & !C1_out_12b[8])) ) ) ) # ( C1_out_12b[3] & ( !C1_out_12b[4] & ( (!C1_out_12b[6] & (C1_out_12b[8] & ((!C1_out_12b[5]) # (!C1_out_12b[7])))) # (C1_out_12b[6] & ((!C1_out_12b[7] $ (!C1_out_12b[8])))) ) ) ) # ( !C1_out_12b[3] & ( !C1_out_12b[4] & ( (!C1_out_12b[7] & (((C1_out_12b[8])))) # (C1_out_12b[7] & ((!C1_out_12b[6] & (!C1_out_12b[5] & C1_out_12b[8])) # (C1_out_12b[6] & (C1_out_12b[5] & !C1_out_12b[8])))) ) ) );


--H1L8 is add_sub:top_inst|double_dabble:hexOuts|bcd~7 at LABCELL_X83_Y7_N21
H1L8 = ( C1_out_12b[8] & ( (C1_out_12b[7] & (((C1_out_12b[4]) # (C1_out_12b[5])) # (C1_out_12b[6]))) ) );


--G1L7 is add_sub:top_inst|bcd2seven_seg:hexHund|Mux6~0 at LABCELL_X85_Y7_N48
G1L7 = ( H1L5 & ( (!H1L7 & (!H1L6 $ (!H1L10 $ (!H1L8)))) ) ) # ( !H1L5 & ( (!H1L7 & (!H1L6 $ (!H1L8))) ) );


--G1L6 is add_sub:top_inst|bcd2seven_seg:hexHund|Mux5~0 at LABCELL_X85_Y7_N51
G1L6 = ( H1L7 & ( (H1L8 & (!H1L6 $ (((!H1L10 & H1L5))))) ) ) # ( !H1L7 & ( (H1L8 & (!H1L6 $ (((!H1L5) # (H1L10))))) ) );


--G1L5 is add_sub:top_inst|bcd2seven_seg:hexHund|Mux4~0 at LABCELL_X85_Y7_N30
G1L5 = ( H1L5 & ( (H1L7 & (!H1L8 & (!H1L6 $ (!H1L10)))) ) ) # ( !H1L5 & ( (!H1L6 & (H1L7 & !H1L8)) ) );


--G1L4 is add_sub:top_inst|bcd2seven_seg:hexHund|Mux3~0 at LABCELL_X85_Y7_N33
G1L4 = ( H1L7 & ( (H1L8 & (!H1L6 $ (((!H1L5) # (H1L10))))) ) ) # ( !H1L7 & ( !H1L6 $ (!H1L8 $ (((!H1L10 & H1L5)))) ) );


--G1L3 is add_sub:top_inst|bcd2seven_seg:hexHund|Mux2~0 at LABCELL_X85_Y7_N24
G1L3 = ( H1L5 & ( (!H1L7 & ((!H1L6 $ (H1L10)) # (H1L8))) # (H1L7 & (!H1L6 $ ((H1L10)))) ) ) # ( !H1L5 & ( ((!H1L7 & H1L8)) # (H1L6) ) );


--G1L2 is add_sub:top_inst|bcd2seven_seg:hexHund|Mux1~0 at LABCELL_X85_Y7_N27
G1L2 = ( H1L7 & ( (!H1L8) # (!H1L6 $ (((!H1L5) # (H1L10)))) ) ) # ( !H1L7 & ( (!H1L8 & (!H1L6 $ (((!H1L5) # (H1L10))))) ) );


--G1L1 is add_sub:top_inst|bcd2seven_seg:hexHund|Mux0~0 at LABCELL_X85_Y7_N42
G1L1 = ( H1L10 & ( H1L5 & ( (!H1L8 & ((!H1L7))) # (H1L8 & (H1L6 & H1L7)) ) ) ) # ( !H1L10 & ( H1L5 & ( (!H1L8 & ((!H1L7))) # (H1L8 & (!H1L6 & H1L7)) ) ) ) # ( H1L10 & ( !H1L5 & ( (!H1L8 & ((!H1L7))) # (H1L8 & (H1L6 & H1L7)) ) ) ) # ( !H1L10 & ( !H1L5 & ( (!H1L8 & ((!H1L7))) # (H1L8 & (H1L6 & H1L7)) ) ) );


--C1_current_state.input_a is add_sub:top_inst|current_state.input_a at FF_X83_Y3_N59
--register power-up is low

C1_current_state.input_a = DFFEAS(C1L53, GLOBAL(A1L4),  ,  , J1_FallingEdge,  ,  ,  ,  );


--C1_current_state.input_b is add_sub:top_inst|current_state.input_b at FF_X83_Y3_N53
--register power-up is low

C1_current_state.input_b = DFFEAS(C1L55, GLOBAL(A1L4),  ,  , J1_FallingEdge,  ,  ,  ,  );


--C1_current_state.disp_sum is add_sub:top_inst|current_state.disp_sum at FF_X83_Y3_N50
--register power-up is low

C1_current_state.disp_sum = DFFEAS( , GLOBAL(A1L4),  ,  , J1_FallingEdge, C1_current_state.input_b,  ,  , VCC);


--C1_current_state.disp_diff is add_sub:top_inst|current_state.disp_diff at FF_X83_Y3_N20
--register power-up is low

C1_current_state.disp_diff = DFFEAS( , GLOBAL(A1L4),  ,  , J1_FallingEdge, C1_current_state.disp_sum,  ,  , VCC);


--C1_output[0] is add_sub:top_inst|output[0] at FF_X83_Y3_N25
--register power-up is low

C1_output[0] = DFFEAS(C1L94, GLOBAL(A1L4),  ,  ,  ,  ,  ,  ,  );


--C1_output[1] is add_sub:top_inst|output[1] at FF_X83_Y3_N43
--register power-up is low

C1_output[1] = DFFEAS(C1L93, GLOBAL(A1L4),  ,  ,  ,  ,  ,  ,  );


--C1_output[2] is add_sub:top_inst|output[2] at FF_X81_Y3_N1
--register power-up is low

C1_output[2] = DFFEAS(C1L92, GLOBAL(A1L4),  ,  ,  ,  ,  ,  ,  );


--C1_output[3] is add_sub:top_inst|output[3] at FF_X82_Y3_N37
--register power-up is low

C1_output[3] = DFFEAS(C1L91, GLOBAL(A1L4),  ,  ,  ,  ,  ,  ,  );


--C1_output[4] is add_sub:top_inst|output[4] at FF_X83_Y3_N38
--register power-up is low

C1_output[4] = DFFEAS(C1L90, GLOBAL(A1L4),  ,  ,  ,  ,  ,  ,  );


--C1_output[5] is add_sub:top_inst|output[5] at FF_X83_Y3_N13
--register power-up is low

C1_output[5] = DFFEAS(C1L89, GLOBAL(A1L4),  ,  ,  ,  ,  ,  ,  );


--C1_output[6] is add_sub:top_inst|output[6] at FF_X83_Y3_N31
--register power-up is low

C1_output[6] = DFFEAS(C1L88, GLOBAL(A1L4),  ,  ,  ,  ,  ,  ,  );


--C1L95 is add_sub:top_inst|Selector12~0 at MLABCELL_X82_Y3_N30
C1L95 = ( C1_current_state.disp_sum & ( E1_cout ) ) # ( !C1_current_state.disp_sum & ( E1_cout & ( (F1L2 & C1_current_state.disp_diff) ) ) ) # ( C1_current_state.disp_sum & ( !E1_cout & ( (F1L2 & C1_current_state.disp_diff) ) ) ) # ( !C1_current_state.disp_sum & ( !E1_cout & ( (F1L2 & C1_current_state.disp_diff) ) ) );


--C1_output[7] is add_sub:top_inst|output[7] at FF_X83_Y3_N1
--register power-up is low

C1_output[7] = DFFEAS(C1L87, GLOBAL(A1L4),  ,  ,  ,  ,  ,  ,  );


--J1_FallingEdge is add_sub:top_inst|edge_detect:pushButton|FallingEdge at FF_X79_Y3_N14
--register power-up is low

J1_FallingEdge = DFFEAS(J1L2, GLOBAL(A1L4), A1L82,  ,  ,  ,  ,  ,  );


--C1_a_reg[0] is add_sub:top_inst|a_reg[0] at FF_X82_Y3_N59
--register power-up is low

C1_a_reg[0] = DFFEAS(C1L4, GLOBAL(A1L4),  ,  , !C1_current_state.input_a,  ,  ,  ,  );


--C1_b_reg[0] is add_sub:top_inst|b_reg[0] at FF_X81_Y3_N29
--register power-up is low

C1_b_reg[0] = DFFEAS(C1L32, GLOBAL(A1L4),  ,  , C1_current_state.input_b,  ,  ,  ,  );


--C1_sub_reg[0] is add_sub:top_inst|sub_reg[0] at FF_X82_Y3_N1
--register power-up is low

C1_sub_reg[0] = DFFEAS(F1L10, GLOBAL(A1L4),  ,  , C1_current_state.disp_diff,  ,  ,  ,  );


--C1_add_reg[0] is add_sub:top_inst|add_reg[0] at FF_X81_Y3_N31
--register power-up is low

C1_add_reg[0] = DFFEAS(E1_sum[0], GLOBAL(A1L4),  ,  , C1_current_state.disp_sum,  ,  ,  ,  );


--C1L76 is add_sub:top_inst|output[0]~0 at LABCELL_X83_Y3_N18
C1L76 = ( !C1_current_state.input_b & ( !C1_current_state.disp_sum ) );


--C1L77 is add_sub:top_inst|output[0]~1 at LABCELL_X83_Y3_N54
C1L77 = ( !C1_current_state.disp_sum & ( !C1_current_state.disp_diff ) );


--C1L94 is add_sub:top_inst|Selector11~0 at LABCELL_X83_Y3_N24
C1L94 = ( C1L3Q & ( C1_sub_reg[0] & ( ((!C1L77 & (C1_add_reg[0])) # (C1L77 & ((C1_b_reg[0])))) # (C1L76) ) ) ) # ( !C1L3Q & ( C1_sub_reg[0] & ( (!C1L77 & (((C1L76)) # (C1_add_reg[0]))) # (C1L77 & (((!C1L76 & C1_b_reg[0])))) ) ) ) # ( C1L3Q & ( !C1_sub_reg[0] & ( (!C1L77 & (C1_add_reg[0] & (!C1L76))) # (C1L77 & (((C1_b_reg[0]) # (C1L76)))) ) ) ) # ( !C1L3Q & ( !C1_sub_reg[0] & ( (!C1L76 & ((!C1L77 & (C1_add_reg[0])) # (C1L77 & ((C1_b_reg[0]))))) ) ) );


--C1_a_reg[1] is add_sub:top_inst|a_reg[1] at FF_X82_Y3_N43
--register power-up is low

C1_a_reg[1] = DFFEAS( , GLOBAL(A1L4),  ,  , !C1_current_state.input_a, D1_prev_data_2[1],  ,  , VCC);


--C1_b_reg[1] is add_sub:top_inst|b_reg[1] at FF_X81_Y3_N7
--register power-up is low

C1_b_reg[1] = DFFEAS(C1L35, GLOBAL(A1L4),  ,  , C1_current_state.input_b,  ,  ,  ,  );


--C1_sub_reg[1] is add_sub:top_inst|sub_reg[1] at FF_X82_Y3_N4
--register power-up is low

C1_sub_reg[1] = DFFEAS(F1L14, GLOBAL(A1L4),  ,  , C1_current_state.disp_diff,  ,  ,  ,  );


--C1_add_reg[1] is add_sub:top_inst|add_reg[1] at FF_X81_Y3_N34
--register power-up is low

C1_add_reg[1] = DFFEAS(E1_sum[1], GLOBAL(A1L4),  ,  , C1_current_state.disp_sum,  ,  ,  ,  );


--C1L93 is add_sub:top_inst|Selector10~0 at LABCELL_X83_Y3_N42
C1L93 = ( C1_a_reg[1] & ( C1_sub_reg[1] & ( ((!C1L77 & (C1_add_reg[1])) # (C1L77 & ((C1L34Q)))) # (C1L76) ) ) ) # ( !C1_a_reg[1] & ( C1_sub_reg[1] & ( (!C1L77 & (((C1L76)) # (C1_add_reg[1]))) # (C1L77 & (((!C1L76 & C1L34Q)))) ) ) ) # ( C1_a_reg[1] & ( !C1_sub_reg[1] & ( (!C1L77 & (C1_add_reg[1] & (!C1L76))) # (C1L77 & (((C1L34Q) # (C1L76)))) ) ) ) # ( !C1_a_reg[1] & ( !C1_sub_reg[1] & ( (!C1L76 & ((!C1L77 & (C1_add_reg[1])) # (C1L77 & ((C1L34Q))))) ) ) );


--C1_a_reg[2] is add_sub:top_inst|a_reg[2] at FF_X82_Y3_N53
--register power-up is low

C1_a_reg[2] = DFFEAS( , GLOBAL(A1L4),  ,  , !C1_current_state.input_a, D1_prev_data_2[2],  ,  , VCC);


--C1_b_reg[2] is add_sub:top_inst|b_reg[2] at FF_X81_Y3_N20
--register power-up is low

C1_b_reg[2] = DFFEAS(C1L38, GLOBAL(A1L4),  ,  , C1_current_state.input_b,  ,  ,  ,  );


--C1_sub_reg[2] is add_sub:top_inst|sub_reg[2] at FF_X82_Y3_N8
--register power-up is low

C1_sub_reg[2] = DFFEAS(F1L18, GLOBAL(A1L4),  ,  , C1_current_state.disp_diff,  ,  ,  ,  );


--C1_add_reg[2] is add_sub:top_inst|add_reg[2] at FF_X81_Y3_N38
--register power-up is low

C1_add_reg[2] = DFFEAS(E1_sum[2], GLOBAL(A1L4),  ,  , C1_current_state.disp_sum,  ,  ,  ,  );


--C1L92 is add_sub:top_inst|Selector9~0 at LABCELL_X81_Y3_N0
C1L92 = ( C1_add_reg[2] & ( C1L37Q & ( (!C1L76) # ((!C1L77 & (C1_sub_reg[2])) # (C1L77 & ((C1L8Q)))) ) ) ) # ( !C1_add_reg[2] & ( C1L37Q & ( (!C1L77 & (C1_sub_reg[2] & ((C1L76)))) # (C1L77 & (((!C1L76) # (C1L8Q)))) ) ) ) # ( C1_add_reg[2] & ( !C1L37Q & ( (!C1L77 & (((!C1L76)) # (C1_sub_reg[2]))) # (C1L77 & (((C1L8Q & C1L76)))) ) ) ) # ( !C1_add_reg[2] & ( !C1L37Q & ( (C1L76 & ((!C1L77 & (C1_sub_reg[2])) # (C1L77 & ((C1L8Q))))) ) ) );


--C1_a_reg[3] is add_sub:top_inst|a_reg[3] at FF_X82_Y3_N56
--register power-up is low

C1_a_reg[3] = DFFEAS(C1L10, GLOBAL(A1L4),  ,  , !C1_current_state.input_a,  ,  ,  ,  );


--C1_b_reg[3] is add_sub:top_inst|b_reg[3] at FF_X81_Y3_N17
--register power-up is low

C1_b_reg[3] = DFFEAS(C1L41, GLOBAL(A1L4),  ,  , C1_current_state.input_b,  ,  ,  ,  );


--C1_sub_reg[3] is add_sub:top_inst|sub_reg[3] at FF_X82_Y3_N11
--register power-up is low

C1_sub_reg[3] = DFFEAS(F1L22, GLOBAL(A1L4),  ,  , C1_current_state.disp_diff,  ,  ,  ,  );


--C1_add_reg[3] is add_sub:top_inst|add_reg[3] at FF_X81_Y3_N40
--register power-up is low

C1_add_reg[3] = DFFEAS(E1_sum[3], GLOBAL(A1L4),  ,  , C1_current_state.disp_sum,  ,  ,  ,  );


--C1L91 is add_sub:top_inst|Selector8~0 at MLABCELL_X82_Y3_N36
C1L91 = ( C1_b_reg[3] & ( C1_add_reg[3] & ( (!C1L76) # ((!C1L77 & ((C1_sub_reg[3]))) # (C1L77 & (C1_a_reg[3]))) ) ) ) # ( !C1_b_reg[3] & ( C1_add_reg[3] & ( (!C1L76 & (!C1L77)) # (C1L76 & ((!C1L77 & ((C1_sub_reg[3]))) # (C1L77 & (C1_a_reg[3])))) ) ) ) # ( C1_b_reg[3] & ( !C1_add_reg[3] & ( (!C1L76 & (C1L77)) # (C1L76 & ((!C1L77 & ((C1_sub_reg[3]))) # (C1L77 & (C1_a_reg[3])))) ) ) ) # ( !C1_b_reg[3] & ( !C1_add_reg[3] & ( (C1L76 & ((!C1L77 & ((C1_sub_reg[3]))) # (C1L77 & (C1_a_reg[3])))) ) ) );


--C1_a_reg[4] is add_sub:top_inst|a_reg[4] at FF_X82_Y3_N47
--register power-up is low

C1_a_reg[4] = DFFEAS(C1L12, GLOBAL(A1L4),  ,  , !C1_current_state.input_a,  ,  ,  ,  );


--C1_b_reg[4] is add_sub:top_inst|b_reg[4] at FF_X81_Y3_N22
--register power-up is low

C1_b_reg[4] = DFFEAS( , GLOBAL(A1L4),  ,  , C1_current_state.input_b, D1_prev_data_2[4],  ,  , VCC);


--C1_sub_reg[4] is add_sub:top_inst|sub_reg[4] at FF_X82_Y3_N13
--register power-up is low

C1_sub_reg[4] = DFFEAS(F1L26, GLOBAL(A1L4),  ,  , C1_current_state.disp_diff,  ,  ,  ,  );


--C1_add_reg[4] is add_sub:top_inst|add_reg[4] at FF_X81_Y3_N43
--register power-up is low

C1_add_reg[4] = DFFEAS(E1_sum[4], GLOBAL(A1L4),  ,  , C1_current_state.disp_sum,  ,  ,  ,  );


--C1L90 is add_sub:top_inst|Selector7~0 at LABCELL_X83_Y3_N36
C1L90 = ( C1L77 & ( C1_a_reg[4] & ( (C1L43Q) # (C1L76) ) ) ) # ( !C1L77 & ( C1_a_reg[4] & ( (!C1L76 & (C1_add_reg[4])) # (C1L76 & ((C1_sub_reg[4]))) ) ) ) # ( C1L77 & ( !C1_a_reg[4] & ( (!C1L76 & C1L43Q) ) ) ) # ( !C1L77 & ( !C1_a_reg[4] & ( (!C1L76 & (C1_add_reg[4])) # (C1L76 & ((C1_sub_reg[4]))) ) ) );


--C1_a_reg[5] is add_sub:top_inst|a_reg[5] at FF_X82_Y3_N49
--register power-up is low

C1_a_reg[5] = DFFEAS(C1L15, GLOBAL(A1L4),  ,  , !C1_current_state.input_a,  ,  ,  ,  );


--C1_b_reg[5] is add_sub:top_inst|b_reg[5] at FF_X81_Y3_N26
--register power-up is low

C1_b_reg[5] = DFFEAS( , GLOBAL(A1L4),  ,  , C1_current_state.input_b, D1_prev_data_2[5],  ,  , VCC);


--C1_sub_reg[5] is add_sub:top_inst|sub_reg[5] at FF_X82_Y3_N16
--register power-up is low

C1_sub_reg[5] = DFFEAS(F1L30, GLOBAL(A1L4),  ,  , C1_current_state.disp_diff,  ,  ,  ,  );


--C1_add_reg[5] is add_sub:top_inst|add_reg[5] at FF_X81_Y3_N46
--register power-up is low

C1_add_reg[5] = DFFEAS(E1_sum[5], GLOBAL(A1L4),  ,  , C1_current_state.disp_sum,  ,  ,  ,  );


--C1L89 is add_sub:top_inst|Selector6~0 at LABCELL_X83_Y3_N12
C1L89 = ( C1_a_reg[5] & ( C1_sub_reg[5] & ( ((!C1L77 & (C1_add_reg[5])) # (C1L77 & ((C1L45Q)))) # (C1L76) ) ) ) # ( !C1_a_reg[5] & ( C1_sub_reg[5] & ( (!C1L76 & ((!C1L77 & (C1_add_reg[5])) # (C1L77 & ((C1L45Q))))) # (C1L76 & (((!C1L77)))) ) ) ) # ( C1_a_reg[5] & ( !C1_sub_reg[5] & ( (!C1L76 & ((!C1L77 & (C1_add_reg[5])) # (C1L77 & ((C1L45Q))))) # (C1L76 & (((C1L77)))) ) ) ) # ( !C1_a_reg[5] & ( !C1_sub_reg[5] & ( (!C1L76 & ((!C1L77 & (C1_add_reg[5])) # (C1L77 & ((C1L45Q))))) ) ) );


--C1_a_reg[6] is add_sub:top_inst|a_reg[6] at FF_X82_Y3_N28
--register power-up is low

C1_a_reg[6] = DFFEAS( , GLOBAL(A1L4),  ,  , !C1_current_state.input_a, D1_prev_data_2[6],  ,  , VCC);


--C1_b_reg[6] is add_sub:top_inst|b_reg[6] at FF_X81_Y3_N14
--register power-up is low

C1_b_reg[6] = DFFEAS(C1L48, GLOBAL(A1L4),  ,  , C1_current_state.input_b,  ,  ,  ,  );


--C1_sub_reg[6] is add_sub:top_inst|sub_reg[6] at FF_X82_Y3_N19
--register power-up is low

C1_sub_reg[6] = DFFEAS(F1L34, GLOBAL(A1L4),  ,  , C1_current_state.disp_diff,  ,  ,  ,  );


--C1_add_reg[6] is add_sub:top_inst|add_reg[6] at FF_X81_Y3_N49
--register power-up is low

C1_add_reg[6] = DFFEAS(E1_sum[6], GLOBAL(A1L4),  ,  , C1_current_state.disp_sum,  ,  ,  ,  );


--C1L88 is add_sub:top_inst|Selector5~0 at LABCELL_X83_Y3_N30
C1L88 = ( C1L77 & ( C1_sub_reg[6] & ( (!C1L76 & (C1L47Q)) # (C1L76 & ((C1_a_reg[6]))) ) ) ) # ( !C1L77 & ( C1_sub_reg[6] & ( (C1L76) # (C1_add_reg[6]) ) ) ) # ( C1L77 & ( !C1_sub_reg[6] & ( (!C1L76 & (C1L47Q)) # (C1L76 & ((C1_a_reg[6]))) ) ) ) # ( !C1L77 & ( !C1_sub_reg[6] & ( (C1_add_reg[6] & !C1L76) ) ) );


--C1_a_reg[7] is add_sub:top_inst|a_reg[7] at FF_X82_Y3_N26
--register power-up is low

C1_a_reg[7] = DFFEAS( , GLOBAL(A1L4),  ,  , !C1_current_state.input_a, D1_prev_data_2[7],  ,  , VCC);


--C1_b_reg[7] is add_sub:top_inst|b_reg[7] at FF_X81_Y3_N10
--register power-up is low

C1_b_reg[7] = DFFEAS( , GLOBAL(A1L4),  ,  , C1_current_state.input_b, D1_prev_data_2[7],  ,  , VCC);


--C1_sub_reg[7] is add_sub:top_inst|sub_reg[7] at FF_X82_Y3_N23
--register power-up is low

C1_sub_reg[7] = DFFEAS(F1L6, GLOBAL(A1L4),  ,  , C1_current_state.disp_diff,  ,  ,  ,  );


--C1_add_reg[7] is add_sub:top_inst|add_reg[7] at FF_X81_Y3_N52
--register power-up is low

C1_add_reg[7] = DFFEAS(E1_sum[7], GLOBAL(A1L4),  ,  , C1_current_state.disp_sum,  ,  ,  ,  );


--C1L87 is add_sub:top_inst|Selector4~0 at LABCELL_X83_Y3_N0
C1L87 = ( C1L77 & ( C1L76 & ( C1_a_reg[7] ) ) ) # ( !C1L77 & ( C1L76 & ( C1_sub_reg[7] ) ) ) # ( C1L77 & ( !C1L76 & ( C1_b_reg[7] ) ) ) # ( !C1L77 & ( !C1L76 & ( C1_add_reg[7] ) ) );


--J1_PrevDataIn1 is add_sub:top_inst|edge_detect:pushButton|PrevDataIn1 at FF_X79_Y3_N56
--register power-up is low

J1_PrevDataIn1 = DFFEAS(J1L4, GLOBAL(A1L4), A1L82,  ,  ,  ,  ,  ,  );


--J1_PrevDataIn2 is add_sub:top_inst|edge_detect:pushButton|PrevDataIn2 at FF_X79_Y3_N17
--register power-up is low

J1_PrevDataIn2 = DFFEAS( , GLOBAL(A1L4), A1L82,  ,  , J1_PrevDataIn1,  ,  , VCC);


--J1L2 is add_sub:top_inst|edge_detect:pushButton|FallingEdge~0 at LABCELL_X79_Y3_N12
J1L2 = ( !J1_PrevDataIn1 & ( J1_PrevDataIn2 ) );


--D1_prev_data_2[0] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_2[0] at FF_X79_Y3_N5
--register power-up is low

D1_prev_data_2[0] = DFFEAS( , GLOBAL(A1L4), A1L82,  ,  , D1_prev_data_1[0],  ,  , VCC);


--D1_prev_data_2[1] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_2[1] at FF_X79_Y3_N20
--register power-up is low

D1_prev_data_2[1] = DFFEAS( , GLOBAL(A1L4), A1L82,  ,  , D1_prev_data_1[1],  ,  , VCC);


--D1_prev_data_2[2] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_2[2] at FF_X79_Y3_N53
--register power-up is low

D1_prev_data_2[2] = DFFEAS(D1L18, GLOBAL(A1L4), A1L82,  ,  ,  ,  ,  ,  );


--D1_prev_data_2[3] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_2[3] at FF_X79_Y3_N44
--register power-up is low

D1_prev_data_2[3] = DFFEAS( , GLOBAL(A1L4), A1L82,  ,  , D1_prev_data_1[3],  ,  , VCC);


--D1_prev_data_2[4] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_2[4] at FF_X79_Y3_N38
--register power-up is low

D1_prev_data_2[4] = DFFEAS(D1L21, GLOBAL(A1L4), A1L82,  ,  ,  ,  ,  ,  );


--D1_prev_data_2[5] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_2[5] at FF_X79_Y3_N1
--register power-up is low

D1_prev_data_2[5] = DFFEAS( , GLOBAL(A1L4), A1L82,  ,  , D1_prev_data_1[5],  ,  , VCC);


--D1_prev_data_2[6] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_2[6] at FF_X79_Y3_N23
--register power-up is low

D1_prev_data_2[6] = DFFEAS( , GLOBAL(A1L4), A1L82,  ,  , D1_prev_data_1[6],  ,  , VCC);


--D1_prev_data_2[7] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_2[7] at FF_X79_Y3_N35
--register power-up is low

D1_prev_data_2[7] = DFFEAS( , GLOBAL(A1L4), A1L82,  ,  , D1_prev_data_1[7],  ,  , VCC);


--D1_prev_data_1[0] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_1[0] at FF_X79_Y3_N26
--register power-up is low

D1_prev_data_1[0] = DFFEAS( , GLOBAL(A1L4), A1L82,  ,  , A1L64,  ,  , VCC);


--D1_prev_data_1[1] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_1[1] at FF_X79_Y3_N29
--register power-up is low

D1_prev_data_1[1] = DFFEAS(D1L4, GLOBAL(A1L4), A1L82,  ,  ,  ,  ,  ,  );


--D1_prev_data_1[2] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_1[2] at FF_X79_Y3_N8
--register power-up is low

D1_prev_data_1[2] = DFFEAS( , GLOBAL(A1L4), A1L82,  ,  , A1L68,  ,  , VCC);


--D1_prev_data_1[3] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_1[3] at FF_X79_Y3_N47
--register power-up is low

D1_prev_data_1[3] = DFFEAS( , GLOBAL(A1L4), A1L82,  ,  , A1L70,  ,  , VCC);


--D1_prev_data_1[4] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_1[4] at FF_X79_Y3_N41
--register power-up is low

D1_prev_data_1[4] = DFFEAS(D1L8, GLOBAL(A1L4), A1L82,  ,  ,  ,  ,  ,  );


--D1_prev_data_1[5] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_1[5] at FF_X79_Y3_N11
--register power-up is low

D1_prev_data_1[5] = DFFEAS(D1L10, GLOBAL(A1L4), A1L82,  ,  ,  ,  ,  ,  );


--D1_prev_data_1[6] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_1[6] at FF_X79_Y3_N32
--register power-up is low

D1_prev_data_1[6] = DFFEAS( , GLOBAL(A1L4), A1L82,  ,  , A1L76,  ,  , VCC);


--D1_prev_data_1[7] is add_sub:top_inst|clock_synchronizer:ASync|prev_data_1[7] at FF_X79_Y3_N50
--register power-up is low

D1_prev_data_1[7] = DFFEAS(D1L13, GLOBAL(A1L4), A1L82,  ,  ,  ,  ,  ,  );


--C1L53 is add_sub:top_inst|current_state.input_a~0 at LABCELL_X83_Y3_N57
C1L53 = ( !C1_current_state.disp_diff );


--C1L55 is add_sub:top_inst|current_state.input_b~0 at LABCELL_X83_Y3_N51
C1L55 = ( !C1_current_state.input_a );



--SW[8] is SW[8] at PIN_AD10
SW[8] = INPUT();


--A1L7 is HEX0[0]~output at IOOBUF_X89_Y8_N39
A1L7 = OUTPUT_BUFFER.O(.I(G3L7), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX0[0] is HEX0[0] at PIN_AE26
HEX0[0] = OUTPUT();


--A1L9 is HEX0[1]~output at IOOBUF_X89_Y11_N79
A1L9 = OUTPUT_BUFFER.O(.I(G3L6), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX0[1] is HEX0[1] at PIN_AE27
HEX0[1] = OUTPUT();


--A1L11 is HEX0[2]~output at IOOBUF_X89_Y11_N96
A1L11 = OUTPUT_BUFFER.O(.I(G3L5), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX0[2] is HEX0[2] at PIN_AE28
HEX0[2] = OUTPUT();


--A1L13 is HEX0[3]~output at IOOBUF_X89_Y4_N79
A1L13 = OUTPUT_BUFFER.O(.I(G3L4), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX0[3] is HEX0[3] at PIN_AG27
HEX0[3] = OUTPUT();


--A1L15 is HEX0[4]~output at IOOBUF_X89_Y13_N56
A1L15 = OUTPUT_BUFFER.O(.I(G3L3), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX0[4] is HEX0[4] at PIN_AF28
HEX0[4] = OUTPUT();


--A1L17 is HEX0[5]~output at IOOBUF_X89_Y13_N39
A1L17 = OUTPUT_BUFFER.O(.I(G3L2), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX0[5] is HEX0[5] at PIN_AG28
HEX0[5] = OUTPUT();


--A1L19 is HEX0[6]~output at IOOBUF_X89_Y4_N96
A1L19 = OUTPUT_BUFFER.O(.I(!G3L1), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX0[6] is HEX0[6] at PIN_AH28
HEX0[6] = OUTPUT();


--A1L22 is HEX1[0]~output at IOOBUF_X89_Y6_N39
A1L22 = OUTPUT_BUFFER.O(.I(G2L7), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX1[0] is HEX1[0] at PIN_AJ29
HEX1[0] = OUTPUT();


--A1L24 is HEX1[1]~output at IOOBUF_X89_Y6_N56
A1L24 = OUTPUT_BUFFER.O(.I(G2L6), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX1[1] is HEX1[1] at PIN_AH29
HEX1[1] = OUTPUT();


--A1L26 is HEX1[2]~output at IOOBUF_X89_Y16_N39
A1L26 = OUTPUT_BUFFER.O(.I(G2L5), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX1[2] is HEX1[2] at PIN_AH30
HEX1[2] = OUTPUT();


--A1L28 is HEX1[3]~output at IOOBUF_X89_Y16_N56
A1L28 = OUTPUT_BUFFER.O(.I(G2L4), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX1[3] is HEX1[3] at PIN_AG30
HEX1[3] = OUTPUT();


--A1L30 is HEX1[4]~output at IOOBUF_X89_Y15_N39
A1L30 = OUTPUT_BUFFER.O(.I(G2L3), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX1[4] is HEX1[4] at PIN_AF29
HEX1[4] = OUTPUT();


--A1L32 is HEX1[5]~output at IOOBUF_X89_Y15_N56
A1L32 = OUTPUT_BUFFER.O(.I(G2L2), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX1[5] is HEX1[5] at PIN_AF30
HEX1[5] = OUTPUT();


--A1L34 is HEX1[6]~output at IOOBUF_X89_Y8_N56
A1L34 = OUTPUT_BUFFER.O(.I(!G2L1), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX1[6] is HEX1[6] at PIN_AD27
HEX1[6] = OUTPUT();


--A1L37 is HEX2[0]~output at IOOBUF_X89_Y9_N22
A1L37 = OUTPUT_BUFFER.O(.I(G1L7), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX2[0] is HEX2[0] at PIN_AB23
HEX2[0] = OUTPUT();


--A1L39 is HEX2[1]~output at IOOBUF_X89_Y23_N39
A1L39 = OUTPUT_BUFFER.O(.I(G1L6), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX2[1] is HEX2[1] at PIN_AE29
HEX2[1] = OUTPUT();


--A1L41 is HEX2[2]~output at IOOBUF_X89_Y23_N56
A1L41 = OUTPUT_BUFFER.O(.I(G1L5), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX2[2] is HEX2[2] at PIN_AD29
HEX2[2] = OUTPUT();


--A1L43 is HEX2[3]~output at IOOBUF_X89_Y20_N79
A1L43 = OUTPUT_BUFFER.O(.I(G1L4), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX2[3] is HEX2[3] at PIN_AC28
HEX2[3] = OUTPUT();


--A1L45 is HEX2[4]~output at IOOBUF_X89_Y25_N39
A1L45 = OUTPUT_BUFFER.O(.I(G1L3), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX2[4] is HEX2[4] at PIN_AD30
HEX2[4] = OUTPUT();


--A1L47 is HEX2[5]~output at IOOBUF_X89_Y20_N96
A1L47 = OUTPUT_BUFFER.O(.I(G1L2), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX2[5] is HEX2[5] at PIN_AC29
HEX2[5] = OUTPUT();


--A1L49 is HEX2[6]~output at IOOBUF_X89_Y25_N56
A1L49 = OUTPUT_BUFFER.O(.I(G1L1), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX2[6] is HEX2[6] at PIN_AC30
HEX2[6] = OUTPUT();


--A1L55 is LEDR[0]~output at IOOBUF_X52_Y0_N2
A1L55 = OUTPUT_BUFFER.O(.I(!C1_current_state.input_a), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--LEDR[0] is LEDR[0] at PIN_V16
LEDR[0] = OUTPUT();


--A1L57 is LEDR[1]~output at IOOBUF_X52_Y0_N19
A1L57 = OUTPUT_BUFFER.O(.I(C1_current_state.input_b), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--LEDR[1] is LEDR[1] at PIN_W16
LEDR[1] = OUTPUT();


--A1L59 is LEDR[2]~output at IOOBUF_X60_Y0_N2
A1L59 = OUTPUT_BUFFER.O(.I(C1_current_state.disp_sum), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--LEDR[2] is LEDR[2] at PIN_V17
LEDR[2] = OUTPUT();


--A1L61 is LEDR[3]~output at IOOBUF_X80_Y0_N2
A1L61 = OUTPUT_BUFFER.O(.I(C1_current_state.disp_diff), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--LEDR[3] is LEDR[3] at PIN_V18
LEDR[3] = OUTPUT();


--A1L3 is CLOCK_50~input at IOIBUF_X32_Y0_N1
A1L3 = INPUT_BUFFER(.I(CLOCK_50), );


--CLOCK_50 is CLOCK_50 at PIN_AF14
CLOCK_50 = INPUT();


--A1L82 is SW[9]~input at IOIBUF_X2_Y0_N58
A1L82 = INPUT_BUFFER(.I(SW[9]), );


--SW[9] is SW[9] at PIN_AE12
SW[9] = INPUT();


--A1L52 is KEY[0]~input at IOIBUF_X36_Y0_N1
A1L52 = INPUT_BUFFER(.I(KEY[0]), );


--KEY[0] is KEY[0] at PIN_AA14
KEY[0] = INPUT();


--A1L64 is SW[0]~input at IOIBUF_X12_Y0_N18
A1L64 = INPUT_BUFFER(.I(SW[0]), );


--SW[0] is SW[0] at PIN_AB12
SW[0] = INPUT();


--A1L66 is SW[1]~input at IOIBUF_X16_Y0_N1
A1L66 = INPUT_BUFFER(.I(SW[1]), );


--SW[1] is SW[1] at PIN_AC12
SW[1] = INPUT();


--A1L68 is SW[2]~input at IOIBUF_X8_Y0_N35
A1L68 = INPUT_BUFFER(.I(SW[2]), );


--SW[2] is SW[2] at PIN_AF9
SW[2] = INPUT();


--A1L70 is SW[3]~input at IOIBUF_X4_Y0_N52
A1L70 = INPUT_BUFFER(.I(SW[3]), );


--SW[3] is SW[3] at PIN_AF10
SW[3] = INPUT();


--A1L72 is SW[4]~input at IOIBUF_X2_Y0_N41
A1L72 = INPUT_BUFFER(.I(SW[4]), );


--SW[4] is SW[4] at PIN_AD11
SW[4] = INPUT();


--A1L74 is SW[5]~input at IOIBUF_X16_Y0_N18
A1L74 = INPUT_BUFFER(.I(SW[5]), );


--SW[5] is SW[5] at PIN_AD12
SW[5] = INPUT();


--A1L76 is SW[6]~input at IOIBUF_X4_Y0_N35
A1L76 = INPUT_BUFFER(.I(SW[6]), );


--SW[6] is SW[6] at PIN_AE11
SW[6] = INPUT();


--A1L78 is SW[7]~input at IOIBUF_X4_Y0_N1
A1L78 = INPUT_BUFFER(.I(SW[7]), );


--SW[7] is SW[7] at PIN_AC9
SW[7] = INPUT();



--A1L4 is CLOCK_50~inputCLKENA0 at CLKCTRL_G6
A1L4 = cyclonev_clkena(.INCLK = A1L3) WITH (clock_type = "Global Clock", ena_register_mode = "always enabled");


--C1L69 is add_sub:top_inst|out_12b[5]~feeder at LABCELL_X83_Y7_N42
C1L69 = ( C1_output[5] );


--C1L72 is add_sub:top_inst|out_12b[7]~feeder at LABCELL_X83_Y7_N6
C1L72 = ( C1_output[7] );


--C1L4 is add_sub:top_inst|a_reg[0]~feeder at MLABCELL_X82_Y3_N57
C1L4 = ( D1_prev_data_2[0] );


--C1L32 is add_sub:top_inst|b_reg[0]~feeder at LABCELL_X81_Y3_N27
C1L32 = ( D1_prev_data_2[0] );


--C1L35 is add_sub:top_inst|b_reg[1]~feeder at LABCELL_X81_Y3_N6
C1L35 = ( D1_prev_data_2[1] );


--C1L38 is add_sub:top_inst|b_reg[2]~feeder at LABCELL_X81_Y3_N18
C1L38 = ( D1_prev_data_2[2] );


--C1L10 is add_sub:top_inst|a_reg[3]~feeder at MLABCELL_X82_Y3_N54
C1L10 = ( D1_prev_data_2[3] );


--C1L41 is add_sub:top_inst|b_reg[3]~feeder at LABCELL_X81_Y3_N15
C1L41 = ( D1_prev_data_2[3] );


--C1L12 is add_sub:top_inst|a_reg[4]~feeder at MLABCELL_X82_Y3_N45
C1L12 = ( D1_prev_data_2[4] );


--C1L15 is add_sub:top_inst|a_reg[5]~feeder at MLABCELL_X82_Y3_N48
C1L15 = ( D1_prev_data_2[5] );


--C1L48 is add_sub:top_inst|b_reg[6]~feeder at LABCELL_X81_Y3_N12
C1L48 = ( D1_prev_data_2[6] );


--D1L18 is add_sub:top_inst|clock_synchronizer:ASync|prev_data_2[2]~feeder at LABCELL_X79_Y3_N51
D1L18 = D1_prev_data_1[2];


--D1L21 is add_sub:top_inst|clock_synchronizer:ASync|prev_data_2[4]~feeder at LABCELL_X79_Y3_N36
D1L21 = D1_prev_data_1[4];


--J1L4 is add_sub:top_inst|edge_detect:pushButton|PrevDataIn1~feeder at LABCELL_X79_Y3_N54
J1L4 = ( A1L52 );


--D1L4 is add_sub:top_inst|clock_synchronizer:ASync|prev_data_1[1]~feeder at LABCELL_X79_Y3_N27
D1L4 = ( A1L66 );


--D1L8 is add_sub:top_inst|clock_synchronizer:ASync|prev_data_1[4]~feeder at LABCELL_X79_Y3_N39
D1L8 = ( A1L72 );


--D1L10 is add_sub:top_inst|clock_synchronizer:ASync|prev_data_1[5]~feeder at LABCELL_X79_Y3_N9
D1L10 = ( A1L74 );


--D1L13 is add_sub:top_inst|clock_synchronizer:ASync|prev_data_1[7]~feeder at LABCELL_X79_Y3_N48
D1L13 = ( A1L78 );


--C1L3Q is add_sub:top_inst|a_reg[0]~DUPLICATE at FF_X82_Y3_N58
--register power-up is low

C1L3Q = DFFEAS(C1L4, GLOBAL(A1L4),  ,  , !C1_current_state.input_a,  ,  ,  ,  );


--C1L31Q is add_sub:top_inst|b_reg[0]~DUPLICATE at FF_X81_Y3_N28
--register power-up is low

C1L31Q = DFFEAS(C1L32, GLOBAL(A1L4),  ,  , C1_current_state.input_b,  ,  ,  ,  );


--C1L6Q is add_sub:top_inst|a_reg[1]~DUPLICATE at FF_X82_Y3_N44
--register power-up is low

C1L6Q = DFFEAS( , GLOBAL(A1L4),  ,  , !C1_current_state.input_a, D1_prev_data_2[1],  ,  , VCC);


--C1L34Q is add_sub:top_inst|b_reg[1]~DUPLICATE at FF_X81_Y3_N8
--register power-up is low

C1L34Q = DFFEAS(C1L35, GLOBAL(A1L4),  ,  , C1_current_state.input_b,  ,  ,  ,  );


--C1L8Q is add_sub:top_inst|a_reg[2]~DUPLICATE at FF_X82_Y3_N52
--register power-up is low

C1L8Q = DFFEAS( , GLOBAL(A1L4),  ,  , !C1_current_state.input_a, D1_prev_data_2[2],  ,  , VCC);


--C1L37Q is add_sub:top_inst|b_reg[2]~DUPLICATE at FF_X81_Y3_N19
--register power-up is low

C1L37Q = DFFEAS(C1L38, GLOBAL(A1L4),  ,  , C1_current_state.input_b,  ,  ,  ,  );


--C1L40Q is add_sub:top_inst|b_reg[3]~DUPLICATE at FF_X81_Y3_N16
--register power-up is low

C1L40Q = DFFEAS(C1L41, GLOBAL(A1L4),  ,  , C1_current_state.input_b,  ,  ,  ,  );


--C1L43Q is add_sub:top_inst|b_reg[4]~DUPLICATE at FF_X81_Y3_N23
--register power-up is low

C1L43Q = DFFEAS( , GLOBAL(A1L4),  ,  , C1_current_state.input_b, D1_prev_data_2[4],  ,  , VCC);


--C1L14Q is add_sub:top_inst|a_reg[5]~DUPLICATE at FF_X82_Y3_N50
--register power-up is low

C1L14Q = DFFEAS(C1L15, GLOBAL(A1L4),  ,  , !C1_current_state.input_a,  ,  ,  ,  );


--C1L45Q is add_sub:top_inst|b_reg[5]~DUPLICATE at FF_X81_Y3_N25
--register power-up is low

C1L45Q = DFFEAS( , GLOBAL(A1L4),  ,  , C1_current_state.input_b, D1_prev_data_2[5],  ,  , VCC);


--C1L17Q is add_sub:top_inst|a_reg[6]~DUPLICATE at FF_X82_Y3_N29
--register power-up is low

C1L17Q = DFFEAS( , GLOBAL(A1L4),  ,  , !C1_current_state.input_a, D1_prev_data_2[6],  ,  , VCC);


--C1L47Q is add_sub:top_inst|b_reg[6]~DUPLICATE at FF_X81_Y3_N13
--register power-up is low

C1L47Q = DFFEAS(C1L48, GLOBAL(A1L4),  ,  , C1_current_state.input_b,  ,  ,  ,  );


